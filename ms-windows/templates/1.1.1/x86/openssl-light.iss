; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=OpenSSL Light (32-bit)
AppVersion=[[DOTTED_VERSION]]
AppVerName=OpenSSL [[DOTTED_VERSION]] Light (32-bit)
AppPublisher=OpenSSL Installer Team
AppPublisherURL=https://www.openssl.org
AppSupportURL=https://github.com/openssl/installer
AppUpdatesURL=https://www.openssl.org
VersionInfoVersion=[[WINDOWS_DOTTED_VERSION]]
DefaultDirName={pf}\OpenSSL
DisableDirPage=no
DefaultGroupName=OpenSSL
SourceDir=[[INSTALLER_SOURCE_DIR]]
OutputBaseFilename=OpenSSL-[[DOTTED_VERSION]]-x86-light
LicenseFile=license.txt
PrivilegesRequired=admin
Compression=bzip
; Minimum version supported is Windows XP.
MinVersion=5.1
CreateUninstallRegKey=not IsMSI

[Code]
// Determine whether or not the installer is being called from the WiX wrapper.
function IsMSI(): Boolean;
var
  x: Integer;
begin
  Result := False;

  for x := 1 to ParamCount do
  begin
    if CompareText(Copy(ParamStr(x), 1, 5), '/MSI=') = 0 then
    begin
      Result := True;
    end;
  end;
end;

// Sets a static registry key as per the input.  Lets the MSI wrapper do its thing later.
procedure PrepareMSIUninstall();
var
  x: Integer;
  subkey: String;
begin
  for x := 1 to ParamCount do
  begin
    if CompareText(Copy(ParamStr(x), 1, 5), '/MSI=') = 0 then
    begin
      subkey := 'SOFTWARE\Inno Setup MSIs\' + Copy(ParamStr(x), 6, Length(ParamStr(x)) - 5);
      RegDeleteKeyIncludingSubkeys(HKLM, subkey);
      RegWriteStringValue(HKLM, subkey, '', ExpandConstant('{uninstallexe}'));
    end;
  end;
end;

function InitializeSetup() : Boolean;
var
  MsgResult : Integer;
  ErrCode: integer;
begin
  // Deal with the VC++ 2017 Redistributable issue.
  if ((NOT FileExists(ExpandConstant('{syswow64}') + '\vcruntime140.dll'))) then begin
    MsgResult := SuppressibleMsgBox('The OpenSSL installation setup has detected that the following critical component is missing:'#10'Microsoft Visual C++ 2017 Redistributables (32-bit)'#10#10'OpenSSL will not function properly without this component.'#10'Download the required redistributables now?', mbError, MB_YESNOCANCEL, IDNO);
    if (MsgResult = IDCANCEL) then exit;

    if (MsgResult = IDYES) then begin
      ShellExecAsOriginalUser('open', 'https://aka.ms/vs/15/release/vc_redist.x86.exe', '', '', SW_SHOW, ewNoWait, ErrCode);
    end;
  end;

  Result := True;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  IsCopied : Boolean;
  MsgResult : Integer;
begin
  if (CurStep = ssPostInstall) then begin
    // Copy files to the system directory if the task was selected.
    if (IsTaskSelected('copytosystem')) then begin
      MsgResult := IDCANCEL;
      repeat
        IsCopied := FileCopy(ExpandConstant('{app}') + '\libcrypto-1_1.dll', ExpandConstant('{sys}') + '\libcrypto-1_1.dll', False);
        if (NOT IsCopied) then  MsgResult := SuppressibleMsgBox('Unable to copy libcrypto-1_1.dll to ' + ExpandConstant('{sys}') + '.'#10'Please close any applications that may be using this OpenSSL component and click Retry to try again.'#10'Clicking Cancel will register the file to be moved during the next reboot.'#10#10'If you click Cancel, OpenSSL may not function properly until the computer is rebooted.', mbError, MB_RETRYCANCEL, IDCANCEL);
      until ((IsCopied) OR (MsgResult = IDCANCEL));
      if (NOT IsCopied) then begin
        FileCopy(ExpandConstant('{app}') + '\libcrypto-1_1.dll', ExpandConstant('{app}') + '\tmpeay32.dll', False);
        RestartReplace(ExpandConstant('{app}') + '\tmpeay32.dll', ExpandConstant('{sys}') + '\libcrypto-1_1.dll');
      end;

      MsgResult := IDCANCEL;
      repeat
        IsCopied := FileCopy(ExpandConstant('{app}') + '\libssl-1_1.dll', ExpandConstant('{sys}') + '\libssl-1_1.dll', False);
        if (NOT IsCopied) then  MsgResult := SuppressibleMsgBox('Unable to copy libssl-1_1.dll to ' + ExpandConstant('{sys}') + '.'#10'Please close any applications that may be using this OpenSSL component and click Retry to try again.'#10'Clicking Cancel will register the file to be moved during the next reboot.'#10#10'If you click Cancel, OpenSSL may not function properly until the computer is rebooted.', mbError, MB_RETRYCANCEL, IDCANCEL);
      until ((IsCopied) OR (MsgResult = IDCANCEL));
      if (NOT IsCopied) then begin
        FileCopy(ExpandConstant('{app}') + '\libssl-1_1.dll', ExpandConstant('{app}') + '\tmpssl32.dll', False);
        RestartReplace(ExpandConstant('{app}') + '\tmpssl32.dll', ExpandConstant('{sys}') + '\libssl-1_1.dll');
      end;

//      // Copy the VC++ Runtime to the system directory if it does not exist.
//      IsCopied := FileCopy(ExpandConstant('{app}') + '\bin\msvcr140.dll', ExpandConstant('{sys}') + '\msvcr140.dll', True);
    end
    else begin
      FileCopy(ExpandConstant('{app}') + '\libcrypto-1_1.dll', ExpandConstant('{app}') + '\bin\libcrypto-1_1.dll', False);
      FileCopy(ExpandConstant('{app}') + '\libssl-1_1.dll', ExpandConstant('{app}') + '\bin\libssl-1_1.dll', False);
    end;
  end;
end;

[Tasks]
Name: copytosystem; Description: "The Windows &system directory"; GroupDescription: "Copy OpenSSL DLLs to:"; Flags: exclusive
Name: copytobin; Description: "The OpenSSL &binaries (/bin) directory"; GroupDescription: "Copy OpenSSL DLLs to:"; Flags: exclusive unchecked

[Files]
Source: "conf\*"; DestDir: "{cf}\SSL"; Flags: recursesubdirs
Source: "bin\PEM\*"; DestDir: "{app}\bin\PEM"; Flags: recursesubdirs
Source: "bin\*.pl"; DestDir: "{app}\bin"
Source: "bin\openssl.exe"; DestDir: "{app}\bin"
Source: "bin\*.dll"; DestDir: "{app}\bin"
Source: "text\*"; DestDir: "{app}"; Flags: recursesubdirs
Source: "tools\*"; DestDir: "{app}"; Flags: recursesubdirs
Source: "libcrypto-1_1.dll"; DestDir: "{app}"
Source: "libssl-1_1.dll"; DestDir: "{app}"
Source: "start.bat"; DestDir: "{app}"

[Icons]
Name: "{group}\OpenSSL Command Prompt (x86)"; Filename: "{app}\start.bat"; WorkingDir: "{app}"
Name: "{group}\OpenSSL Website"; Filename: "https://www.openssl.org/"; WorkingDir: "{app}"
Name: "{group}\OpenSSL Documentation"; Filename: "https://www.openssl.org/docs/"; WorkingDir: "{app}"
Name: "{group}\Uninstall OpenSSL"; Filename: "{uninstallexe}"; Check: not IsMSI

[Registry]
Root: HKLM; Subkey: "SOFTWARE\Inno Setup MSIs"; Check: IsMSI; AfterInstall: PrepareMSIUninstall

[Run]
Filename: "https://github.com/sponsors/openssl"; Description: "Become a sponsor of the OpenSSL project"; WorkingDir: "{app}"; Flags: shellexec postinstall nowait skipifsilent unchecked

[UninstallDelete]
Type: files; Name: "{app}\bin\libcrypto-1_1.dll"
Type: files; Name: "{app}\bin\libssl-1_1.dll"
